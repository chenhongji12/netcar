!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BCK2835_LIBRARY_BUILD	bcm2835.c	22;"	d	file:
BCM2835_BLOCK_SIZE	bcm2835.h	613;"	d
BCM2835_BSC0_BASE	bcm2835.h	539;"	d
BCM2835_BSC1_BASE	bcm2835.h	543;"	d
BCM2835_BSC_A	bcm2835.h	916;"	d
BCM2835_BSC_C	bcm2835.h	913;"	d
BCM2835_BSC_CLKT	bcm2835.h	920;"	d
BCM2835_BSC_C_CLEAR_1	bcm2835.h	928;"	d
BCM2835_BSC_C_CLEAR_2	bcm2835.h	929;"	d
BCM2835_BSC_C_I2CEN	bcm2835.h	923;"	d
BCM2835_BSC_C_INTD	bcm2835.h	926;"	d
BCM2835_BSC_C_INTR	bcm2835.h	924;"	d
BCM2835_BSC_C_INTT	bcm2835.h	925;"	d
BCM2835_BSC_C_READ	bcm2835.h	930;"	d
BCM2835_BSC_C_ST	bcm2835.h	927;"	d
BCM2835_BSC_DEL	bcm2835.h	919;"	d
BCM2835_BSC_DIV	bcm2835.h	918;"	d
BCM2835_BSC_DLEN	bcm2835.h	915;"	d
BCM2835_BSC_FIFO	bcm2835.h	917;"	d
BCM2835_BSC_FIFO_SIZE	bcm2835.h	944;"	d
BCM2835_BSC_S	bcm2835.h	914;"	d
BCM2835_BSC_S_CLKT	bcm2835.h	933;"	d
BCM2835_BSC_S_DONE	bcm2835.h	941;"	d
BCM2835_BSC_S_ERR	bcm2835.h	934;"	d
BCM2835_BSC_S_RXD	bcm2835.h	937;"	d
BCM2835_BSC_S_RXF	bcm2835.h	935;"	d
BCM2835_BSC_S_RXR	bcm2835.h	939;"	d
BCM2835_BSC_S_TA	bcm2835.h	942;"	d
BCM2835_BSC_S_TXD	bcm2835.h	938;"	d
BCM2835_BSC_S_TXE	bcm2835.h	936;"	d
BCM2835_BSC_S_TXW	bcm2835.h	940;"	d
BCM2835_CLOCK_BASE	bcm2835.h	533;"	d
BCM2835_CORE_CLK_HZ	bcm2835.h	506;"	d
BCM2835_GPAFEN0	bcm2835.h	647;"	d
BCM2835_GPAFEN1	bcm2835.h	648;"	d
BCM2835_GPAREN0	bcm2835.h	645;"	d
BCM2835_GPAREN1	bcm2835.h	646;"	d
BCM2835_GPCLR0	bcm2835.h	631;"	d
BCM2835_GPCLR1	bcm2835.h	632;"	d
BCM2835_GPEDS0	bcm2835.h	635;"	d
BCM2835_GPEDS1	bcm2835.h	636;"	d
BCM2835_GPFEN0	bcm2835.h	639;"	d
BCM2835_GPFEN1	bcm2835.h	640;"	d
BCM2835_GPFSEL0	bcm2835.h	623;"	d
BCM2835_GPFSEL1	bcm2835.h	624;"	d
BCM2835_GPFSEL2	bcm2835.h	625;"	d
BCM2835_GPFSEL3	bcm2835.h	626;"	d
BCM2835_GPFSEL4	bcm2835.h	627;"	d
BCM2835_GPFSEL5	bcm2835.h	628;"	d
BCM2835_GPHEN0	bcm2835.h	641;"	d
BCM2835_GPHEN1	bcm2835.h	642;"	d
BCM2835_GPIO_BASE	bcm2835.h	535;"	d
BCM2835_GPIO_FSEL_ALT0	bcm2835.h	/^    BCM2835_GPIO_FSEL_ALT0  = 0x04,   \/*!< Alternate function 0 0b100 *\/$/;"	e	enum:__anon2
BCM2835_GPIO_FSEL_ALT1	bcm2835.h	/^    BCM2835_GPIO_FSEL_ALT1  = 0x05,   \/*!< Alternate function 1 0b101 *\/$/;"	e	enum:__anon2
BCM2835_GPIO_FSEL_ALT2	bcm2835.h	/^    BCM2835_GPIO_FSEL_ALT2  = 0x06,   \/*!< Alternate function 2 0b110, *\/$/;"	e	enum:__anon2
BCM2835_GPIO_FSEL_ALT3	bcm2835.h	/^    BCM2835_GPIO_FSEL_ALT3  = 0x07,   \/*!< Alternate function 3 0b111 *\/$/;"	e	enum:__anon2
BCM2835_GPIO_FSEL_ALT4	bcm2835.h	/^    BCM2835_GPIO_FSEL_ALT4  = 0x03,   \/*!< Alternate function 4 0b011 *\/$/;"	e	enum:__anon2
BCM2835_GPIO_FSEL_ALT5	bcm2835.h	/^    BCM2835_GPIO_FSEL_ALT5  = 0x02,   \/*!< Alternate function 5 0b010 *\/$/;"	e	enum:__anon2
BCM2835_GPIO_FSEL_INPT	bcm2835.h	/^    BCM2835_GPIO_FSEL_INPT  = 0x00,   \/*!< Input 0b000 *\/$/;"	e	enum:__anon2
BCM2835_GPIO_FSEL_MASK	bcm2835.h	/^    BCM2835_GPIO_FSEL_MASK  = 0x07    \/*!< Function select bits mask 0b111 *\/$/;"	e	enum:__anon2
BCM2835_GPIO_FSEL_OUTP	bcm2835.h	/^    BCM2835_GPIO_FSEL_OUTP  = 0x01,   \/*!< Output 0b001 *\/$/;"	e	enum:__anon2
BCM2835_GPIO_PADS	bcm2835.h	531;"	d
BCM2835_GPIO_PUD_DOWN	bcm2835.h	/^    BCM2835_GPIO_PUD_DOWN    = 0x01,   \/*!< Enable Pull Down control 0b01 *\/$/;"	e	enum:__anon3
BCM2835_GPIO_PUD_OFF	bcm2835.h	/^    BCM2835_GPIO_PUD_OFF     = 0x00,   \/*!< Off ? disable pull-up\/down 0b00 *\/$/;"	e	enum:__anon3
BCM2835_GPIO_PUD_UP	bcm2835.h	/^    BCM2835_GPIO_PUD_UP      = 0x02    \/*!< Enable Pull Up control 0b10  *\/$/;"	e	enum:__anon3
BCM2835_GPIO_PWM	bcm2835.h	541;"	d
BCM2835_GPLEN0	bcm2835.h	643;"	d
BCM2835_GPLEN1	bcm2835.h	644;"	d
BCM2835_GPLEV0	bcm2835.h	633;"	d
BCM2835_GPLEV1	bcm2835.h	634;"	d
BCM2835_GPPUD	bcm2835.h	649;"	d
BCM2835_GPPUDCLK0	bcm2835.h	650;"	d
BCM2835_GPPUDCLK1	bcm2835.h	651;"	d
BCM2835_GPREN0	bcm2835.h	637;"	d
BCM2835_GPREN1	bcm2835.h	638;"	d
BCM2835_GPSET0	bcm2835.h	629;"	d
BCM2835_GPSET1	bcm2835.h	630;"	d
BCM2835_H	bcm2835.h	480;"	d
BCM2835_HAVE_DMB	bcm2835.h	492;"	d
BCM2835_I2C_CLOCK_DIVIDER_148	bcm2835.h	/^    BCM2835_I2C_CLOCK_DIVIDER_148    = 148        \/*!< 148 = 59ns = 1.689 MHz *\/$/;"	e	enum:__anon10
BCM2835_I2C_CLOCK_DIVIDER_150	bcm2835.h	/^    BCM2835_I2C_CLOCK_DIVIDER_150    = 150,       \/*!< 150 = 60ns = 1.666 MHz (default at reset) *\/$/;"	e	enum:__anon10
BCM2835_I2C_CLOCK_DIVIDER_2500	bcm2835.h	/^    BCM2835_I2C_CLOCK_DIVIDER_2500   = 2500,      \/*!< 2500 = 10us = 100 kHz *\/$/;"	e	enum:__anon10
BCM2835_I2C_CLOCK_DIVIDER_626	bcm2835.h	/^    BCM2835_I2C_CLOCK_DIVIDER_626    = 626,       \/*!< 622 = 2.504us = 399.3610 kHz *\/$/;"	e	enum:__anon10
BCM2835_I2C_REASON_ERROR_CLKT	bcm2835.h	/^    BCM2835_I2C_REASON_ERROR_CLKT    = 0x02,      \/*!< Received Clock Stretch Timeout *\/$/;"	e	enum:__anon11
BCM2835_I2C_REASON_ERROR_DATA	bcm2835.h	/^    BCM2835_I2C_REASON_ERROR_DATA    = 0x04       \/*!< Not all data is sent \/ received *\/$/;"	e	enum:__anon11
BCM2835_I2C_REASON_ERROR_NACK	bcm2835.h	/^    BCM2835_I2C_REASON_ERROR_NACK    = 0x01,      \/*!< Received a NACK *\/$/;"	e	enum:__anon11
BCM2835_I2C_REASON_OK	bcm2835.h	/^    BCM2835_I2C_REASON_OK   	     = 0x00,      \/*!< Success *\/$/;"	e	enum:__anon11
BCM2835_PADS_GPIO_0_27	bcm2835.h	680;"	d
BCM2835_PADS_GPIO_28_45	bcm2835.h	681;"	d
BCM2835_PADS_GPIO_46_53	bcm2835.h	682;"	d
BCM2835_PAD_DRIVE_10mA	bcm2835.h	692;"	d
BCM2835_PAD_DRIVE_12mA	bcm2835.h	693;"	d
BCM2835_PAD_DRIVE_14mA	bcm2835.h	694;"	d
BCM2835_PAD_DRIVE_16mA	bcm2835.h	695;"	d
BCM2835_PAD_DRIVE_2mA	bcm2835.h	688;"	d
BCM2835_PAD_DRIVE_4mA	bcm2835.h	689;"	d
BCM2835_PAD_DRIVE_6mA	bcm2835.h	690;"	d
BCM2835_PAD_DRIVE_8mA	bcm2835.h	691;"	d
BCM2835_PAD_GROUP_GPIO_0_27	bcm2835.h	/^    BCM2835_PAD_GROUP_GPIO_0_27         = 0, \/*!< Pad group for GPIO pads 0 to 27 *\/$/;"	e	enum:__anon4
BCM2835_PAD_GROUP_GPIO_28_45	bcm2835.h	/^    BCM2835_PAD_GROUP_GPIO_28_45        = 1, \/*!< Pad group for GPIO pads 28 to 45 *\/$/;"	e	enum:__anon4
BCM2835_PAD_GROUP_GPIO_46_53	bcm2835.h	/^    BCM2835_PAD_GROUP_GPIO_46_53        = 2  \/*!< Pad group for GPIO pads 46 to 53 *\/$/;"	e	enum:__anon4
BCM2835_PAD_HYSTERESIS_ENABLED	bcm2835.h	687;"	d
BCM2835_PAD_PASSWRD	bcm2835.h	685;"	d
BCM2835_PAD_SLEW_RATE_UNLIMITED	bcm2835.h	686;"	d
BCM2835_PAGE_SIZE	bcm2835.h	611;"	d
BCM2835_PERI_BASE	bcm2835.h	522;"	d
BCM2835_PERI_SIZE	bcm2835.h	524;"	d
BCM2835_PWM0_DATA	bcm2835.h	992;"	d
BCM2835_PWM0_ENABLE	bcm2835.h	1017;"	d
BCM2835_PWM0_MS_MODE	bcm2835.h	1010;"	d
BCM2835_PWM0_OFFSTATE	bcm2835.h	1014;"	d
BCM2835_PWM0_RANGE	bcm2835.h	991;"	d
BCM2835_PWM0_REPEATFF	bcm2835.h	1015;"	d
BCM2835_PWM0_REVPOLAR	bcm2835.h	1013;"	d
BCM2835_PWM0_SERIAL	bcm2835.h	1016;"	d
BCM2835_PWM0_USEFIFO	bcm2835.h	1012;"	d
BCM2835_PWM1_DATA	bcm2835.h	995;"	d
BCM2835_PWM1_ENABLE	bcm2835.h	1008;"	d
BCM2835_PWM1_MS_MODE	bcm2835.h	1002;"	d
BCM2835_PWM1_OFFSTATE	bcm2835.h	1005;"	d
BCM2835_PWM1_RANGE	bcm2835.h	994;"	d
BCM2835_PWM1_REPEATFF	bcm2835.h	1006;"	d
BCM2835_PWM1_REVPOLAR	bcm2835.h	1004;"	d
BCM2835_PWM1_SERIAL	bcm2835.h	1007;"	d
BCM2835_PWM1_USEFIFO	bcm2835.h	1003;"	d
BCM2835_PWMCLK_CNTL	bcm2835.h	998;"	d
BCM2835_PWMCLK_DIV	bcm2835.h	999;"	d
BCM2835_PWM_CLEAR_FIFO	bcm2835.h	1011;"	d
BCM2835_PWM_CLOCK_DIVIDER_1	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_1     = 1        \/*!< 1 = 4.6875kHz, same as divider 4096 *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_1024	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_1024  = 1024,    \/*!< 1024 = 18.75kHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_128	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_128   = 128,     \/*!< 128 = 150kHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_16	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_16    = 16,      \/*!< 16 = 1.2MHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_2	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_2     = 2,       \/*!< 2 = 9.6MHz, fastest you can get *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_2048	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_2048  = 2048,    \/*!< 2048 = 9.375kHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_256	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_256   = 256,     \/*!< 256 = 75kHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_32	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_32    = 32,      \/*!< 32 = 600.0kHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_4	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_4     = 4,       \/*!< 4 = 4.8MHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_512	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_512   = 512,     \/*!< 512 = 37.5kHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_64	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_64    = 64,      \/*!< 64 = 300kHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CLOCK_DIVIDER_8	bcm2835.h	/^    BCM2835_PWM_CLOCK_DIVIDER_8     = 8,       \/*!< 8 = 2.4MHz *\/$/;"	e	enum:__anon12
BCM2835_PWM_CONTROL	bcm2835.h	988;"	d
BCM2835_PWM_DMAC	bcm2835.h	990;"	d
BCM2835_PWM_FIF1	bcm2835.h	993;"	d
BCM2835_PWM_PASSWRD	bcm2835.h	1000;"	d
BCM2835_PWM_STATUS	bcm2835.h	989;"	d
BCM2835_REGBASE_BSC0	bcm2835.h	/^    BCM2835_REGBASE_BSC0 = 7, \/*!< Base of the BSC0 registers. *\/$/;"	e	enum:__anon1
BCM2835_REGBASE_BSC1	bcm2835.h	/^    BCM2835_REGBASE_BSC1 = 8  \/*!< Base of the BSC1 registers. *\/$/;"	e	enum:__anon1
BCM2835_REGBASE_CLK	bcm2835.h	/^    BCM2835_REGBASE_CLK  = 4, \/*!< Base of the CLK registers. *\/$/;"	e	enum:__anon1
BCM2835_REGBASE_GPIO	bcm2835.h	/^    BCM2835_REGBASE_GPIO = 2, \/*!< Base of the GPIO registers. *\/$/;"	e	enum:__anon1
BCM2835_REGBASE_PADS	bcm2835.h	/^    BCM2835_REGBASE_PADS = 5, \/*!< Base of the PADS registers. *\/$/;"	e	enum:__anon1
BCM2835_REGBASE_PWM	bcm2835.h	/^    BCM2835_REGBASE_PWM  = 3, \/*!< Base of the PWM registers. *\/$/;"	e	enum:__anon1
BCM2835_REGBASE_SPI0	bcm2835.h	/^    BCM2835_REGBASE_SPI0 = 6, \/*!< Base of the SPI0 registers. *\/$/;"	e	enum:__anon1
BCM2835_REGBASE_ST	bcm2835.h	/^    BCM2835_REGBASE_ST   = 1, \/*!< Base of the ST (System Timer) registers. *\/$/;"	e	enum:__anon1
BCM2835_SPI0_BASE	bcm2835.h	537;"	d
BCM2835_SPI0_CLK	bcm2835.h	810;"	d
BCM2835_SPI0_CS	bcm2835.h	808;"	d
BCM2835_SPI0_CS_ADCS	bcm2835.h	830;"	d
BCM2835_SPI0_CS_CLEAR	bcm2835.h	836;"	d
BCM2835_SPI0_CS_CLEAR_RX	bcm2835.h	837;"	d
BCM2835_SPI0_CS_CLEAR_TX	bcm2835.h	838;"	d
BCM2835_SPI0_CS_CPHA	bcm2835.h	840;"	d
BCM2835_SPI0_CS_CPOL	bcm2835.h	839;"	d
BCM2835_SPI0_CS_CS	bcm2835.h	841;"	d
BCM2835_SPI0_CS_CSPOL	bcm2835.h	835;"	d
BCM2835_SPI0_CS_CSPOL0	bcm2835.h	820;"	d
BCM2835_SPI0_CS_CSPOL1	bcm2835.h	819;"	d
BCM2835_SPI0_CS_CSPOL2	bcm2835.h	818;"	d
BCM2835_SPI0_CS_DMAEN	bcm2835.h	833;"	d
BCM2835_SPI0_CS_DMA_LEN	bcm2835.h	817;"	d
BCM2835_SPI0_CS_DONE	bcm2835.h	825;"	d
BCM2835_SPI0_CS_INTD	bcm2835.h	832;"	d
BCM2835_SPI0_CS_INTR	bcm2835.h	831;"	d
BCM2835_SPI0_CS_LEN	bcm2835.h	828;"	d
BCM2835_SPI0_CS_LEN_LONG	bcm2835.h	816;"	d
BCM2835_SPI0_CS_LMONO	bcm2835.h	827;"	d
BCM2835_SPI0_CS_REN	bcm2835.h	829;"	d
BCM2835_SPI0_CS_RXD	bcm2835.h	824;"	d
BCM2835_SPI0_CS_RXF	bcm2835.h	821;"	d
BCM2835_SPI0_CS_RXR	bcm2835.h	822;"	d
BCM2835_SPI0_CS_TA	bcm2835.h	834;"	d
BCM2835_SPI0_CS_TE_EN	bcm2835.h	826;"	d
BCM2835_SPI0_CS_TXD	bcm2835.h	823;"	d
BCM2835_SPI0_DC	bcm2835.h	813;"	d
BCM2835_SPI0_DLEN	bcm2835.h	811;"	d
BCM2835_SPI0_FIFO	bcm2835.h	809;"	d
BCM2835_SPI0_LTOH	bcm2835.h	812;"	d
BCM2835_SPI_BIT_ORDER_LSBFIRST	bcm2835.h	/^    BCM2835_SPI_BIT_ORDER_LSBFIRST = 0,  \/*!< LSB First *\/$/;"	e	enum:__anon6
BCM2835_SPI_BIT_ORDER_MSBFIRST	bcm2835.h	/^    BCM2835_SPI_BIT_ORDER_MSBFIRST = 1   \/*!< MSB First *\/$/;"	e	enum:__anon6
BCM2835_SPI_CLOCK_DIVIDER_1	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_1     = 1        \/*!< 1 = 3.814697260kHz on Rpi2, 6.1035156kHz on RPI3, same as 0\/65536 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_1024	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_1024  = 1024,    \/*!< 1024 = 244.140625kHz on Rpi2, 390.625kHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_128	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_128   = 128,     \/*!< 128 = 1.953125MHz on Rpi2, 3.125MHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_16	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_16    = 16,      \/*!< 16 = 15.625MHz on Rpi2, 25MHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_16384	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_16384 = 16384,   \/*!< 16384 = 15.25878906kHz on Rpi2, 24.4140625kHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_2	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_2     = 2,       \/*!< 2 = 125MHz on Rpi2, 200MHz on RPI3, fastest you can get. Dont expect this speed to work reliably.*\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_2048	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_2048  = 2048,    \/*!< 2048 = 122.0703125kHz on Rpi2, 195.3125kHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_256	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_256   = 256,     \/*!< 256 = 976.5625kHz on Rpi2, 1.5625MHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_32	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_32    = 32,      \/*!< 32 = 7.8125MHz on Rpi2, 12.5MHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_32768	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_32768 = 32768,   \/*!< 32768 = 7.629394531kHz on Rpi2, 12.20703125kHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_4	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_4     = 4,       \/*!< 4 = 62.5MHz on Rpi2, 100MHz on RPI3. Dont expect this speed to work reliably. *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_4096	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_4096  = 4096,    \/*!< 4096 = 61.03515625kHz on Rpi2, 97.65625kHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_512	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_512   = 512,     \/*!< 512 = 488.28125kHz on Rpi2, 781.25kHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_64	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_64    = 64,      \/*!< 64 = 3.90625MHz on Rpi2, 6.250MHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_65536	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_65536 = 0,       \/*!< 65536 = 3.814697260kHz on Rpi2, 6.1035156kHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_8	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_8     = 8,       \/*!< 8 = 31.25MHz on Rpi2, 50MHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CLOCK_DIVIDER_8192	bcm2835.h	/^    BCM2835_SPI_CLOCK_DIVIDER_8192  = 8192,    \/*!< 8192 = 30.51757813kHz on Rpi2, 48.828125kHz on RPI3 *\/$/;"	e	enum:__anon9
BCM2835_SPI_CS0	bcm2835.h	/^    BCM2835_SPI_CS0 = 0,     \/*!< Chip Select 0 *\/$/;"	e	enum:__anon8
BCM2835_SPI_CS1	bcm2835.h	/^    BCM2835_SPI_CS1 = 1,     \/*!< Chip Select 1 *\/$/;"	e	enum:__anon8
BCM2835_SPI_CS2	bcm2835.h	/^    BCM2835_SPI_CS2 = 2,     \/*!< Chip Select 2 (ie pins CS1 and CS2 are asserted) *\/$/;"	e	enum:__anon8
BCM2835_SPI_CS_NONE	bcm2835.h	/^    BCM2835_SPI_CS_NONE = 3  \/*!< No CS, control it yourself *\/$/;"	e	enum:__anon8
BCM2835_SPI_MODE0	bcm2835.h	/^    BCM2835_SPI_MODE0 = 0,  \/*!< CPOL = 0, CPHA = 0 *\/$/;"	e	enum:__anon7
BCM2835_SPI_MODE1	bcm2835.h	/^    BCM2835_SPI_MODE1 = 1,  \/*!< CPOL = 0, CPHA = 1 *\/$/;"	e	enum:__anon7
BCM2835_SPI_MODE2	bcm2835.h	/^    BCM2835_SPI_MODE2 = 2,  \/*!< CPOL = 1, CPHA = 0 *\/$/;"	e	enum:__anon7
BCM2835_SPI_MODE3	bcm2835.h	/^    BCM2835_SPI_MODE3 = 3   \/*!< CPOL = 1, CPHA = 1 *\/$/;"	e	enum:__anon7
BCM2835_ST_BASE	bcm2835.h	529;"	d
BCM2835_ST_CHI	bcm2835.h	982;"	d
BCM2835_ST_CLO	bcm2835.h	981;"	d
BCM2835_ST_CS	bcm2835.h	980;"	d
BCM2835_VERSION	bcm2835.h	484;"	d
BMC2835_RPI2_DT_FILENAME	bcm2835.h	509;"	d
BMC2835_RPI2_DT_PERI_BASE_ADDRESS_OFFSET	bcm2835.h	511;"	d
BMC2835_RPI2_DT_PERI_SIZE_OFFSET	bcm2835.h	513;"	d
BUFLEN	server.c	6;"	d	file:
CC	makefile	/^CC      := gcc$/;"	m
CFLAGS	makefile	/^CFLAGS  := -g -Wall -O3 $(DEFINES) $(INCLUDE)$/;"	m
CXXFLAGS	makefile	/^CXXFLAGS:= $(CFLAGS) -DHAVE_CONFIG_H$/;"	m
DEFINES	makefile	/^DEFINES :=$/;"	m
HIGH	bcm2835.h	501;"	d
INCLUDE	makefile	/^INCLUDE := -I.$/;"	m
INTERVALUE	client.c	9;"	d	file:
LDFLAGS	makefile	/^LDFLAGS :=$/;"	m
LIBS	makefile	/^LIBS    :=$/;"	m
LOW	bcm2835.h	503;"	d
OBJS	makefile	/^OBJS    := $(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(SOURCE)))$/;"	m
PIN	pwm.c	27;"	d	file:
PWM_CHANNEL	pwm.c	29;"	d	file:
RANGE	pwm.c	31;"	d	file:
RPI_BPLUS_GPIO_J8_03	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_03     =  2,  \/*!< B+, Pin J8-03 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_05	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_05     =  3,  \/*!< B+, Pin J8-05 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_07	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_07     =  4,  \/*!< B+, Pin J8-07 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_08	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_08     = 14,  \/*!< B+, Pin J8-08, defaults to alt function 0 UART0_TXD *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_10	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_10     = 15,  \/*!< B+, Pin J8-10, defaults to alt function 0 UART0_RXD *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_11	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_11     = 17,  \/*!< B+, Pin J8-11 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_12	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_12     = 18,  \/*!< B+, Pin J8-12, can be PWM channel 0 in ALT FUN 5 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_13	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_13     = 27,  \/*!< B+, Pin J8-13 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_15	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_15     = 22,  \/*!< B+, Pin J8-15 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_16	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_16     = 23,  \/*!< B+, Pin J8-16 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_18	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_18     = 24,  \/*!< B+, Pin J8-18 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_19	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_19     = 10,  \/*!< B+, Pin J8-19, MOSI when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_21	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_21     =  9,  \/*!< B+, Pin J8-21, MISO when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_22	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_22     = 25,  \/*!< B+, Pin J8-22 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_23	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_23     = 11,  \/*!< B+, Pin J8-23, CLK when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_24	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_24     =  8,  \/*!< B+, Pin J8-24, CE0 when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_26	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_26     =  7,  \/*!< B+, Pin J8-26, CE1 when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_29	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_29     =  5,  \/*!< B+, Pin J8-29,  *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_31	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_31     =  6,  \/*!< B+, Pin J8-31,  *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_32	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_32     = 12,  \/*!< B+, Pin J8-32,  *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_33	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_33     = 13,  \/*!< B+, Pin J8-33,  *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_35	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_35     = 19,  \/*!< B+, Pin J8-35, can be PWM channel 1 in ALT FUN 5 *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_36	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_36     = 16,  \/*!< B+, Pin J8-36,  *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_37	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_37     = 26,  \/*!< B+, Pin J8-37,  *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_38	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_38     = 20,  \/*!< B+, Pin J8-38,  *\/$/;"	e	enum:__anon5
RPI_BPLUS_GPIO_J8_40	bcm2835.h	/^    RPI_BPLUS_GPIO_J8_40     = 21   \/*!< B+, Pin J8-40,  *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_03	bcm2835.h	/^    RPI_GPIO_P1_03        =  0,  \/*!< Version 1, Pin P1-03 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_05	bcm2835.h	/^    RPI_GPIO_P1_05        =  1,  \/*!< Version 1, Pin P1-05 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_07	bcm2835.h	/^    RPI_GPIO_P1_07        =  4,  \/*!< Version 1, Pin P1-07 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_08	bcm2835.h	/^    RPI_GPIO_P1_08        = 14,  \/*!< Version 1, Pin P1-08, defaults to alt function 0 UART0_TXD *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_10	bcm2835.h	/^    RPI_GPIO_P1_10        = 15,  \/*!< Version 1, Pin P1-10, defaults to alt function 0 UART0_RXD *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_11	bcm2835.h	/^    RPI_GPIO_P1_11        = 17,  \/*!< Version 1, Pin P1-11 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_12	bcm2835.h	/^    RPI_GPIO_P1_12        = 18,  \/*!< Version 1, Pin P1-12, can be PWM channel 0 in ALT FUN 5 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_13	bcm2835.h	/^    RPI_GPIO_P1_13        = 21,  \/*!< Version 1, Pin P1-13 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_15	bcm2835.h	/^    RPI_GPIO_P1_15        = 22,  \/*!< Version 1, Pin P1-15 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_16	bcm2835.h	/^    RPI_GPIO_P1_16        = 23,  \/*!< Version 1, Pin P1-16 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_18	bcm2835.h	/^    RPI_GPIO_P1_18        = 24,  \/*!< Version 1, Pin P1-18 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_19	bcm2835.h	/^    RPI_GPIO_P1_19        = 10,  \/*!< Version 1, Pin P1-19, MOSI when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_21	bcm2835.h	/^    RPI_GPIO_P1_21        =  9,  \/*!< Version 1, Pin P1-21, MISO when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_22	bcm2835.h	/^    RPI_GPIO_P1_22        = 25,  \/*!< Version 1, Pin P1-22 *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_23	bcm2835.h	/^    RPI_GPIO_P1_23        = 11,  \/*!< Version 1, Pin P1-23, CLK when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_24	bcm2835.h	/^    RPI_GPIO_P1_24        =  8,  \/*!< Version 1, Pin P1-24, CE0 when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_GPIO_P1_26	bcm2835.h	/^    RPI_GPIO_P1_26        =  7,  \/*!< Version 1, Pin P1-26, CE1 when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_03	bcm2835.h	/^    RPI_V2_GPIO_P1_03     =  2,  \/*!< Version 2, Pin P1-03 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_05	bcm2835.h	/^    RPI_V2_GPIO_P1_05     =  3,  \/*!< Version 2, Pin P1-05 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_07	bcm2835.h	/^    RPI_V2_GPIO_P1_07     =  4,  \/*!< Version 2, Pin P1-07 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_08	bcm2835.h	/^    RPI_V2_GPIO_P1_08     = 14,  \/*!< Version 2, Pin P1-08, defaults to alt function 0 UART0_TXD *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_10	bcm2835.h	/^    RPI_V2_GPIO_P1_10     = 15,  \/*!< Version 2, Pin P1-10, defaults to alt function 0 UART0_RXD *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_11	bcm2835.h	/^    RPI_V2_GPIO_P1_11     = 17,  \/*!< Version 2, Pin P1-11 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_12	bcm2835.h	/^    RPI_V2_GPIO_P1_12     = 18,  \/*!< Version 2, Pin P1-12, can be PWM channel 0 in ALT FUN 5 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_13	bcm2835.h	/^    RPI_V2_GPIO_P1_13     = 27,  \/*!< Version 2, Pin P1-13 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_15	bcm2835.h	/^    RPI_V2_GPIO_P1_15     = 22,  \/*!< Version 2, Pin P1-15 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_16	bcm2835.h	/^    RPI_V2_GPIO_P1_16     = 23,  \/*!< Version 2, Pin P1-16 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_18	bcm2835.h	/^    RPI_V2_GPIO_P1_18     = 24,  \/*!< Version 2, Pin P1-18 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_19	bcm2835.h	/^    RPI_V2_GPIO_P1_19     = 10,  \/*!< Version 2, Pin P1-19, MOSI when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_21	bcm2835.h	/^    RPI_V2_GPIO_P1_21     =  9,  \/*!< Version 2, Pin P1-21, MISO when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_22	bcm2835.h	/^    RPI_V2_GPIO_P1_22     = 25,  \/*!< Version 2, Pin P1-22 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_23	bcm2835.h	/^    RPI_V2_GPIO_P1_23     = 11,  \/*!< Version 2, Pin P1-23, CLK when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_24	bcm2835.h	/^    RPI_V2_GPIO_P1_24     =  8,  \/*!< Version 2, Pin P1-24, CE0 when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_26	bcm2835.h	/^    RPI_V2_GPIO_P1_26     =  7,  \/*!< Version 2, Pin P1-26, CE1 when SPI0 in use *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_29	bcm2835.h	/^    RPI_V2_GPIO_P1_29     =  5,  \/*!< Version 2, Pin P1-29 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_31	bcm2835.h	/^    RPI_V2_GPIO_P1_31     =  6,  \/*!< Version 2, Pin P1-31 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_32	bcm2835.h	/^    RPI_V2_GPIO_P1_32     = 12,  \/*!< Version 2, Pin P1-32 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_33	bcm2835.h	/^    RPI_V2_GPIO_P1_33     = 13,  \/*!< Version 2, Pin P1-33 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_35	bcm2835.h	/^    RPI_V2_GPIO_P1_35     = 19,  \/*!< Version 2, Pin P1-35, can be PWM channel 1 in ALT FUN 5  *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_36	bcm2835.h	/^    RPI_V2_GPIO_P1_36     = 16,  \/*!< Version 2, Pin P1-36 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_37	bcm2835.h	/^    RPI_V2_GPIO_P1_37     = 26,  \/*!< Version 2, Pin P1-37 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_38	bcm2835.h	/^    RPI_V2_GPIO_P1_38     = 20,  \/*!< Version 2, Pin P1-38 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P1_40	bcm2835.h	/^    RPI_V2_GPIO_P1_40     = 21,  \/*!< Version 2, Pin P1-40 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P5_03	bcm2835.h	/^    RPI_V2_GPIO_P5_03     = 28,  \/*!< Version 2, Pin P5-03 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P5_04	bcm2835.h	/^    RPI_V2_GPIO_P5_04     = 29,  \/*!< Version 2, Pin P5-04 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P5_05	bcm2835.h	/^    RPI_V2_GPIO_P5_05     = 30,  \/*!< Version 2, Pin P5-05 *\/$/;"	e	enum:__anon5
RPI_V2_GPIO_P5_06	bcm2835.h	/^    RPI_V2_GPIO_P5_06     = 31,  \/*!< Version 2, Pin P5-06 *\/$/;"	e	enum:__anon5
RPiGPIOPin	bcm2835.h	/^} RPiGPIOPin;$/;"	t	typeref:enum:__anon5
SOURCE	makefile	/^SOURCE  := $(wildcard *.c) $(wildcard *.cpp)$/;"	m
TARGET	makefile	/^TARGET  := test$/;"	m
__PWM_H__	pwm.h	2;"	d
__TCP__NET__SOCKET__H	tcp_net_socket.h	2;"	d
bcm2835FunctionSelect	bcm2835.h	/^} bcm2835FunctionSelect;$/;"	t	typeref:enum:__anon2
bcm2835I2CClockDivider	bcm2835.h	/^} bcm2835I2CClockDivider;$/;"	t	typeref:enum:__anon10
bcm2835I2CReasonCodes	bcm2835.h	/^} bcm2835I2CReasonCodes;$/;"	t	typeref:enum:__anon11
bcm2835PUDControl	bcm2835.h	/^} bcm2835PUDControl;$/;"	t	typeref:enum:__anon3
bcm2835PWMClockDivider	bcm2835.h	/^} bcm2835PWMClockDivider;$/;"	t	typeref:enum:__anon12
bcm2835PadGroup	bcm2835.h	/^} bcm2835PadGroup;$/;"	t	typeref:enum:__anon4
bcm2835RegisterBase	bcm2835.h	/^} bcm2835RegisterBase;$/;"	t	typeref:enum:__anon1
bcm2835SPIBitOrder	bcm2835.h	/^}bcm2835SPIBitOrder;$/;"	t	typeref:enum:__anon6
bcm2835SPIChipSelect	bcm2835.h	/^} bcm2835SPIChipSelect;$/;"	t	typeref:enum:__anon8
bcm2835SPIClockDivider	bcm2835.h	/^} bcm2835SPIClockDivider;$/;"	t	typeref:enum:__anon9
bcm2835SPIMode	bcm2835.h	/^}bcm2835SPIMode;$/;"	t	typeref:enum:__anon7
bcm2835_bsc0	bcm2835.c	/^volatile uint32_t *bcm2835_bsc0        = (uint32_t *)MAP_FAILED;$/;"	v
bcm2835_bsc1	bcm2835.c	/^volatile uint32_t *bcm2835_bsc1        = (uint32_t *)MAP_FAILED;$/;"	v
bcm2835_clk	bcm2835.c	/^volatile uint32_t *bcm2835_clk         = (uint32_t *)MAP_FAILED;$/;"	v
bcm2835_close	bcm2835.c	/^int bcm2835_close(void)$/;"	f
bcm2835_delay	bcm2835.c	/^void bcm2835_delay(unsigned int millis)$/;"	f
bcm2835_delayMicroseconds	bcm2835.c	/^void bcm2835_delayMicroseconds(uint64_t micros)$/;"	f
bcm2835_gpio	bcm2835.c	/^volatile uint32_t *bcm2835_gpio        = (uint32_t *)MAP_FAILED;$/;"	v
bcm2835_gpio_afen	bcm2835.c	/^void bcm2835_gpio_afen(uint8_t pin)$/;"	f
bcm2835_gpio_aren	bcm2835.c	/^void bcm2835_gpio_aren(uint8_t pin)$/;"	f
bcm2835_gpio_clr	bcm2835.c	/^void bcm2835_gpio_clr(uint8_t pin)$/;"	f
bcm2835_gpio_clr_afen	bcm2835.c	/^void bcm2835_gpio_clr_afen(uint8_t pin)$/;"	f
bcm2835_gpio_clr_aren	bcm2835.c	/^void bcm2835_gpio_clr_aren(uint8_t pin)$/;"	f
bcm2835_gpio_clr_fen	bcm2835.c	/^void bcm2835_gpio_clr_fen(uint8_t pin)$/;"	f
bcm2835_gpio_clr_hen	bcm2835.c	/^void bcm2835_gpio_clr_hen(uint8_t pin)$/;"	f
bcm2835_gpio_clr_len	bcm2835.c	/^void bcm2835_gpio_clr_len(uint8_t pin)$/;"	f
bcm2835_gpio_clr_multi	bcm2835.c	/^void bcm2835_gpio_clr_multi(uint32_t mask)$/;"	f
bcm2835_gpio_clr_ren	bcm2835.c	/^void bcm2835_gpio_clr_ren(uint8_t pin)$/;"	f
bcm2835_gpio_eds	bcm2835.c	/^uint8_t bcm2835_gpio_eds(uint8_t pin)$/;"	f
bcm2835_gpio_eds_multi	bcm2835.c	/^uint32_t bcm2835_gpio_eds_multi(uint32_t mask)$/;"	f
bcm2835_gpio_fen	bcm2835.c	/^void bcm2835_gpio_fen(uint8_t pin)$/;"	f
bcm2835_gpio_fsel	bcm2835.c	/^void bcm2835_gpio_fsel(uint8_t pin, uint8_t mode)$/;"	f
bcm2835_gpio_hen	bcm2835.c	/^void bcm2835_gpio_hen(uint8_t pin)$/;"	f
bcm2835_gpio_len	bcm2835.c	/^void bcm2835_gpio_len(uint8_t pin)$/;"	f
bcm2835_gpio_lev	bcm2835.c	/^uint8_t bcm2835_gpio_lev(uint8_t pin)$/;"	f
bcm2835_gpio_pad	bcm2835.c	/^uint32_t bcm2835_gpio_pad(uint8_t group)$/;"	f
bcm2835_gpio_pud	bcm2835.c	/^void bcm2835_gpio_pud(uint8_t pud)$/;"	f
bcm2835_gpio_pudclk	bcm2835.c	/^void bcm2835_gpio_pudclk(uint8_t pin, uint8_t on)$/;"	f
bcm2835_gpio_ren	bcm2835.c	/^void bcm2835_gpio_ren(uint8_t pin)$/;"	f
bcm2835_gpio_set	bcm2835.c	/^void bcm2835_gpio_set(uint8_t pin)$/;"	f
bcm2835_gpio_set_eds	bcm2835.c	/^void bcm2835_gpio_set_eds(uint8_t pin)$/;"	f
bcm2835_gpio_set_eds_multi	bcm2835.c	/^void bcm2835_gpio_set_eds_multi(uint32_t mask)$/;"	f
bcm2835_gpio_set_multi	bcm2835.c	/^void bcm2835_gpio_set_multi(uint32_t mask)$/;"	f
bcm2835_gpio_set_pad	bcm2835.c	/^void bcm2835_gpio_set_pad(uint8_t group, uint32_t control)$/;"	f
bcm2835_gpio_set_pud	bcm2835.c	/^void bcm2835_gpio_set_pud(uint8_t pin, uint8_t pud)$/;"	f
bcm2835_gpio_write	bcm2835.c	/^void bcm2835_gpio_write(uint8_t pin, uint8_t on)$/;"	f
bcm2835_gpio_write_mask	bcm2835.c	/^void bcm2835_gpio_write_mask(uint32_t value, uint32_t mask)$/;"	f
bcm2835_gpio_write_multi	bcm2835.c	/^void bcm2835_gpio_write_multi(uint32_t mask, uint8_t on)$/;"	f
bcm2835_i2c_begin	bcm2835.c	/^int bcm2835_i2c_begin(void)$/;"	f
bcm2835_i2c_end	bcm2835.c	/^void bcm2835_i2c_end(void)$/;"	f
bcm2835_i2c_read	bcm2835.c	/^uint8_t bcm2835_i2c_read(char* buf, uint32_t len)$/;"	f
bcm2835_i2c_read_register_rs	bcm2835.c	/^uint8_t bcm2835_i2c_read_register_rs(char* regaddr, char* buf, uint32_t len)$/;"	f
bcm2835_i2c_setClockDivider	bcm2835.c	/^void bcm2835_i2c_setClockDivider(uint16_t divider)$/;"	f
bcm2835_i2c_setSlaveAddress	bcm2835.c	/^void bcm2835_i2c_setSlaveAddress(uint8_t addr)$/;"	f
bcm2835_i2c_set_baudrate	bcm2835.c	/^void bcm2835_i2c_set_baudrate(uint32_t baudrate)$/;"	f
bcm2835_i2c_write	bcm2835.c	/^uint8_t bcm2835_i2c_write(const char * buf, uint32_t len)$/;"	f
bcm2835_i2c_write_read_rs	bcm2835.c	/^uint8_t bcm2835_i2c_write_read_rs(char* cmds, uint32_t cmds_len, char* buf, uint32_t buf_len)$/;"	f
bcm2835_init	bcm2835.c	/^int bcm2835_init(void)$/;"	f
bcm2835_pads	bcm2835.c	/^volatile uint32_t *bcm2835_pads        = (uint32_t *)MAP_FAILED;$/;"	v
bcm2835_peri_read	bcm2835.c	/^uint32_t bcm2835_peri_read(volatile uint32_t* paddr)$/;"	f
bcm2835_peri_read_nb	bcm2835.c	/^uint32_t bcm2835_peri_read_nb(volatile uint32_t* paddr)$/;"	f
bcm2835_peri_set_bits	bcm2835.c	/^void bcm2835_peri_set_bits(volatile uint32_t* paddr, uint32_t value, uint32_t mask)$/;"	f
bcm2835_peri_write	bcm2835.c	/^void bcm2835_peri_write(volatile uint32_t* paddr, uint32_t value)$/;"	f
bcm2835_peri_write_nb	bcm2835.c	/^void bcm2835_peri_write_nb(volatile uint32_t* paddr, uint32_t value)$/;"	f
bcm2835_peripherals	bcm2835.c	/^uint32_t *bcm2835_peripherals = (uint32_t *)MAP_FAILED;$/;"	v
bcm2835_peripherals_base	bcm2835.c	/^uint32_t *bcm2835_peripherals_base = (uint32_t *)BCM2835_PERI_BASE;$/;"	v
bcm2835_peripherals_size	bcm2835.c	/^uint32_t bcm2835_peripherals_size = BCM2835_PERI_SIZE;$/;"	v
bcm2835_pwm	bcm2835.c	/^volatile uint32_t *bcm2835_pwm         = (uint32_t *)MAP_FAILED;$/;"	v
bcm2835_pwm_set_clock	bcm2835.c	/^void bcm2835_pwm_set_clock(uint32_t divisor)$/;"	f
bcm2835_pwm_set_data	bcm2835.c	/^void bcm2835_pwm_set_data(uint8_t channel, uint32_t data)$/;"	f
bcm2835_pwm_set_mode	bcm2835.c	/^void bcm2835_pwm_set_mode(uint8_t channel, uint8_t markspace, uint8_t enabled)$/;"	f
bcm2835_pwm_set_range	bcm2835.c	/^void bcm2835_pwm_set_range(uint8_t channel, uint32_t range)$/;"	f
bcm2835_regbase	bcm2835.c	/^uint32_t* bcm2835_regbase(uint8_t regbase)$/;"	f
bcm2835_set_debug	bcm2835.c	/^void  bcm2835_set_debug(uint8_t d)$/;"	f
bcm2835_spi0	bcm2835.c	/^volatile uint32_t *bcm2835_spi0        = (uint32_t *)MAP_FAILED;$/;"	v
bcm2835_spi_begin	bcm2835.c	/^int bcm2835_spi_begin(void)$/;"	f
bcm2835_spi_chipSelect	bcm2835.c	/^void bcm2835_spi_chipSelect(uint8_t cs)$/;"	f
bcm2835_spi_end	bcm2835.c	/^void bcm2835_spi_end(void)$/;"	f
bcm2835_spi_setBitOrder	bcm2835.c	/^void bcm2835_spi_setBitOrder(uint8_t __attribute__((unused)) order)$/;"	f
bcm2835_spi_setChipSelectPolarity	bcm2835.c	/^void bcm2835_spi_setChipSelectPolarity(uint8_t cs, uint8_t active)$/;"	f
bcm2835_spi_setClockDivider	bcm2835.c	/^void bcm2835_spi_setClockDivider(uint16_t divider)$/;"	f
bcm2835_spi_setDataMode	bcm2835.c	/^void bcm2835_spi_setDataMode(uint8_t mode)$/;"	f
bcm2835_spi_transfer	bcm2835.c	/^uint8_t bcm2835_spi_transfer(uint8_t value)$/;"	f
bcm2835_spi_transfern	bcm2835.c	/^void bcm2835_spi_transfern(char* buf, uint32_t len)$/;"	f
bcm2835_spi_transfernb	bcm2835.c	/^void bcm2835_spi_transfernb(char* tbuf, char* rbuf, uint32_t len)$/;"	f
bcm2835_spi_writenb	bcm2835.c	/^void bcm2835_spi_writenb(char* tbuf, uint32_t len)$/;"	f
bcm2835_st	bcm2835.c	/^volatile uint32_t *bcm2835_st	       = (uint32_t *)MAP_FAILED;$/;"	v
bcm2835_st_delay	bcm2835.c	/^void bcm2835_st_delay(uint64_t offset_micros, uint64_t micros)$/;"	f
bcm2835_st_read	bcm2835.c	/^uint64_t bcm2835_st_read(void)$/;"	f
bcm2835_version	bcm2835.c	/^unsigned int bcm2835_version(void) $/;"	f
buf	client.c	/^char buf[1024];$/;"	v
buf	server.c	/^char buf[BUFLEN];$/;"	v
buffer	client.c	/^char buffer[1024];$/;"	v
debug	bcm2835.c	/^static uint8_t debug = 0;$/;"	v	file:
delay	bcm2835.h	1043;"	d
delayMicroseconds	bcm2835.h	1044;"	d
handleClient	server.c	/^void *handleClient(void *arg)$/;"	f
heartbeatFlag	client.c	/^int heartbeatFlag=0;$/;"	v
i2c_byte_wait_us	bcm2835.c	/^static int i2c_byte_wait_us = 0;$/;"	v	file:
main	bcm2835.c	/^int main(int argc, char **argv)$/;"	f
main	client.c	/^int main()$/;"	f
main	server.c	/^int main()$/;"	f
malloc_aligned	bcm2835.c	/^void *malloc_aligned(size_t size)$/;"	f
mapmem	bcm2835.c	/^static void *mapmem(const char *msg, size_t size, int fd, off_t off)$/;"	f	file:
pwmClose	pwm.c	/^int pwmClose()$/;"	f
pwmData	pwm.c	/^int pwmData(int channel, int data)$/;"	f
pwmData0	client.c	/^int pwmData0=INTERVALUE;$/;"	v
pwmData1	client.c	/^int pwmData1=INTERVALUE;$/;"	v
pwmInit	pwm.c	/^int pwmInit()$/;"	f
scaleNUM	client.c	/^int scaleNUM=1;$/;"	v
scalePWM	client.c	15;"	d	file:
servoPwm	client.c	/^int servoPwm(int sfd, char mode)$/;"	f
servoStop	client.c	/^void servoStop()  \/\/cannot set a value in a large interval$/;"	f
tcp_accept	tcp_net_socket.c	/^int tcp_accept(int sfd)$/;"	f
tcp_connect	tcp_net_socket.c	/^int tcp_connect(const char* ip, int port)   \/\/客户端连接，服务端的地址$/;"	f
tcp_init	tcp_net_socket.c	/^int tcp_init(const char* ip, int port)$/;"	f
unmapmem	bcm2835.c	/^static void unmapmem(void **pmem, size_t size)$/;"	f	file:
